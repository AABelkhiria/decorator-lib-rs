name: Create Release and Crate Asset

on:
  push:
    branches:
      - main

jobs:
  create_release:
    runs-on: ubuntu-latest

    env:
      CRATE_NAME: "decorator"

    outputs:
      new_version: ${{ steps.versioning.outputs.new-version }}

    permissions:
      contents: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        id: cache-cargo
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo

      - name: Install Cargo Edit
        if: steps.cache-cargo.outputs.cache-hit != 'true'
        run: cargo install cargo-edit

      - name: Calculate Next Version
        id: versioning
        uses: AABelkhiria/next-version@v1
        with:
          mode: 'git-calver'

      - name: Update version in Cargo.toml
        run: |
            cargo set-version ${{ steps.versioning.outputs.new-version }}
            echo "version=${{ steps.versioning.outputs.new-version }}"
        
      - name: Package the crate
        run: cargo package --allow-dirty

      - name: Create GitHub Release and Upload Crate
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.versioning.outputs.new-version }}
          files: "target/package/*.crate"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Registry Index Branch
        shell: bash
        run: |
          # Set up variables
          CRATE_VERSION="${{ steps.versioning.outputs.new-version }}"
          CRATE_FILE="${CRATE_NAME}-${CRATE_VERSION}.crate"
          

          # 1. Clone the index branch into a separate directory
          # The GITHUB_TOKEN has permission to clone/push to the same repo
          git clone --branch=index "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" index_repo
          cd index_repo

          # 2. Calculate the checksum of the .crate file from the release
          # The path points back to the original workspace where the crate was built
          CHECKSUM=$(sha256sum "../target/package/${CRATE_FILE}" | awk '{ print $1 }')

          # 3. Determine the correct directory structure for the index
          if [ ${#CRATE_NAME} -le 2 ]; then
            index_dir="${#CRATE_NAME}"
          elif [ ${#CRATE_NAME} -eq 3 ]; then
            index_dir="3/${CRATE_NAME:0:1}"
          else
            index_dir="${CRATE_NAME:0:2}/${CRATE_NAME:2:2}"
          fi
          
          mkdir -p "$index_dir"
          index_file="$index_dir/$CRATE_NAME"

          # 4. Create the JSON metadata line for the new version
          DEPS_JSON=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].dependencies | map({name: .name, req: .req, features: .features, optional: .optional, default_features: .uses_default_features, target: .target, kind: .kind, registry: .registry})')
          
          jq -n \
            --arg name "$CRATE_NAME" \
            --arg vers "$CRATE_VERSION" \
            --arg cksum "$CHECKSUM" \
            --argjson deps "${DEPS_JSON:-[]}" \
            '{name: $name, vers: $vers, deps: $deps, cksum: $cksum, yanked: false}' >> "$index_file"

          # 5. Commit and push the updated index
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Add ${CRATE_NAME} v${CRATE_VERSION}"
          git push